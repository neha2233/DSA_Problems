package Recursion;

import java.util.Stack;

public class SortStack {

    public static Stack<Integer> sort(Stack<Integer> st){
        if(st.size()==0 || st.size()==1)
            return st;

        Integer temp=st.peek();
        st.pop();

        sort(st);

        sorthelp(st,temp);

        return st;
    }
   public static Stack<Integer> sorthelp(Stack<Integer> st, Integer element){
        if(st.isEmpty() || st.peek()<element){
            st.push(element);
            return st;
        }
        Integer temp=st.pop();


       sorthelp(st,element);
        st.push(temp);
        return st;

   }

    public static void main(String[] args)
    {
        Stack<Integer> stack=new Stack<>();
        stack.push(2);
        stack.push(3);
        stack.push(5);
        stack.push(1);
        stack.push(4);

        System.out.println("Original stack:" + stack);
        Stack ans=sort(stack);
        System.out.println("Reversed stack:" + ans);
    }
}
