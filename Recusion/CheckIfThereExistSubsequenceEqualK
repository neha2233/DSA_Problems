package Recursion;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

//You are given an array 'A' of 'N' integers. You have to return true if there exists a subset of elements of 'A' that sums up to 'K'. Otherwise, return false.
//        For Example
//        'N' = 3, 'K' = 5, 'A' = [1, 2, 3].
//        Subset [2, 3] has sum equal to 'K'.
//        So our answer is True.
public class CheckIfThereExistSubsequenceEqualK {
    public static boolean solve(int[] nums, int k,int i,int sum){
        if(i==nums.length){
            if(sum==k){
                return true;
            }
            else return false;
        }

        sum=sum+nums[i];
        if(solve(nums,k,i+1,sum)==true)return true;

        sum=sum-nums[i];
        if(solve(nums,k,i+1,sum)==true)return true;

        return false;
    }
    public static void main(String[] args){

        int k=5;
        int[] nums={1,2,3};

        boolean ans=solve(nums,k, 0,0);
        System.out.println(ans);
    }
}
