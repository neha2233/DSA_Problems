package Recursion;

//recursive tree;
//3
//        1 2 3
//        [[1, 2, 3], [1, 2], [1, 3], [1], [2, 3], [2], [3], []]
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class PrintAllSubsequence {
    public static void solve(int[] nums,int i,List<Integer> ans,List<List<Integer>> res){
        if(i==nums.length){
            res.add(new ArrayList(ans));
            return;
        }
        ans.add(nums[i]);

        solve(nums,i+1,ans,res);

        ans.remove(ans.size()-1);

        solve(nums,i+1,ans,res);


    }
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n= sc.nextInt();

        int[] nums=new int[n];

        for(int i=0; i<nums.length; i++){
            int j= sc.nextInt();
            nums[i]=j;
        }
        List<Integer> ans=new ArrayList<>();
       List<List<Integer>> res=new ArrayList<>();
       solve(nums,0,ans,res);
        System.out.println(res);
    }
}
