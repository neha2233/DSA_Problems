package SlidingWindow;
//Given a binary array nums and an integer k, return the maximum number of consecutive 1's in the array if you can flip at most k 0's.
//        Example 1:
//        Input: nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2
//        Output: 6
public class maxConsecutiveOnesIII {
    public static int solve(int[] nums, int k){
     int maxi=0;
     int i=0;
     for(int j=0; j<nums.length; j++){

       if(nums[j]==0){

           k--;
       }
       if(nums[j]==0 && k<0){
           while(k<0){
               if(nums[i]==0) {
                   k++;
               }
               i++;
           }
       }
      maxi=Math.max(maxi,j-i+1);
    }
    return maxi;
    }
    public static void main(String[] args){
        int  nums[]={1,1,1,0,0,0,1,1,1,1,0};
        int k=2;
        int ans=solve(nums,k);
        System.out.println(ans);

    }
}
