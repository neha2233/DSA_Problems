package SlidingWindow;
//Given an array of integers nums and an integer k. A continuous subarray is called nice if there are k odd numbers on it.
//        Return the number of nice sub-arrays.
//        Example 1:
//        Input: nums = [1,1,2,1,1], k = 3
//        Output: 2
import java.util.HashMap;
import java.util.Map;
public class countNumberofNiceSubarrays {
    public static int solve(int[] nums,int k){
        return subarraysumlessthank(nums,k)-subarraysumlessthank(nums,k-1);
    }
    public static int subarraysumlessthank(int[] nums, int k){
     int count=0;
     int i=0;
     int sum=0;
     for(int j=0;j<nums.length; j++){
         sum+=nums[j];

         while(sum>k){
             sum-=nums[i];
             i++;
         }
         count +=j-i+1;
     }
     return count;
    }
    public static void main(String[] args){

     int[] nums={2,2,2,1,2,2,1,2,2,2};
     //{0,0,0,1,0,0,1,0,0,0}
     int k=2;
     for(int i=0; i<nums.length;i++){
         if(nums[i]%2==0){
             nums[i]=0;
         }
         else nums[i]=1;
     }
     int x=solve(nums,k);
        System.out.println(x);

    }
}
