package SlidingWindow;

import java.util.HashMap;

//Given an array arr[] containing positive elements, the task is to find the length of the longest subarray of an input array
//containing at most two distinct integers.
//        Examples:
//        Input: arr[]= [2, 1, 2,3,4,4,2]
//        Output: 3
public class fruitIntoBasket {
    public static int solve(int[] arr){
        HashMap<Integer,Integer> map=new HashMap<>();
        int i=0;
        int maxi=0;

        for(int j=0; j<arr.length; j++){
            map.put(arr[j],map.getOrDefault(arr[j],0)+1);


                while(map.size()>2){
                    map.put(arr[i],map.get(arr[i])-1);
                    if(map.get(arr[i])==0)
                       map.remove(arr[i]);
                    i++;
                }

            maxi=Math.max(maxi,j-i+1);
        }
        return maxi;
    }
    public static void main(String[] args){
        //int arr[]={2,1,2,3,4,3,4,3,4};
        int arr[]={2, 1, 2,3,4,4,2};
        int ans=solve(arr);
        System.out.println(ans);
    }
}
